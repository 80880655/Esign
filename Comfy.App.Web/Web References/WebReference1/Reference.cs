//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18444.
// 
#pragma warning disable 1591

namespace Comfy.App.Web.WebReference1 {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MailServiceSoap", Namespace="http://tempuri.org/")]
    public partial class MailService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback IsConnectedOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendMailOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendMail2OperationCompleted;
        
        private System.Threading.SendOrPostCallback SendMail3OperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public MailService() {
            this.Url = global::Comfy.App.Web.Properties.Settings.Default.Comfy_App_Web_WebReference1_MailService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event IsConnectedCompletedEventHandler IsConnectedCompleted;
        
        /// <remarks/>
        public event SendMailCompletedEventHandler SendMailCompleted;
        
        /// <remarks/>
        public event SendMail2CompletedEventHandler SendMail2Completed;
        
        /// <remarks/>
        public event SendMail3CompletedEventHandler SendMail3Completed;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsConnected", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsConnected() {
            object[] results = this.Invoke("IsConnected", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsConnectedAsync() {
            this.IsConnectedAsync(null);
        }
        
        /// <remarks/>
        public void IsConnectedAsync(object userState) {
            if ((this.IsConnectedOperationCompleted == null)) {
                this.IsConnectedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsConnectedOperationCompleted);
            }
            this.InvokeAsync("IsConnected", new object[0], this.IsConnectedOperationCompleted, userState);
        }
        
        private void OnIsConnectedOperationCompleted(object arg) {
            if ((this.IsConnectedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsConnectedCompleted(this, new IsConnectedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendMail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SendMail(string To, string Cc, string From, string Subject, string Body, string Format) {
            object[] results = this.Invoke("SendMail", new object[] {
                        To,
                        Cc,
                        From,
                        Subject,
                        Body,
                        Format});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendMailAsync(string To, string Cc, string From, string Subject, string Body, string Format) {
            this.SendMailAsync(To, Cc, From, Subject, Body, Format, null);
        }
        
        /// <remarks/>
        public void SendMailAsync(string To, string Cc, string From, string Subject, string Body, string Format, object userState) {
            if ((this.SendMailOperationCompleted == null)) {
                this.SendMailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMailOperationCompleted);
            }
            this.InvokeAsync("SendMail", new object[] {
                        To,
                        Cc,
                        From,
                        Subject,
                        Body,
                        Format}, this.SendMailOperationCompleted, userState);
        }
        
        private void OnSendMailOperationCompleted(object arg) {
            if ((this.SendMailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMailCompleted(this, new SendMailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendMail2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SendMail2(string To, string Cc, string Bcc, string From, string Subject, string Body, string Format, FileClass[] fc, ref string ErrorMsg) {
            object[] results = this.Invoke("SendMail2", new object[] {
                        To,
                        Cc,
                        Bcc,
                        From,
                        Subject,
                        Body,
                        Format,
                        fc,
                        ErrorMsg});
            ErrorMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendMail2Async(string To, string Cc, string Bcc, string From, string Subject, string Body, string Format, FileClass[] fc, string ErrorMsg) {
            this.SendMail2Async(To, Cc, Bcc, From, Subject, Body, Format, fc, ErrorMsg, null);
        }
        
        /// <remarks/>
        public void SendMail2Async(string To, string Cc, string Bcc, string From, string Subject, string Body, string Format, FileClass[] fc, string ErrorMsg, object userState) {
            if ((this.SendMail2OperationCompleted == null)) {
                this.SendMail2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMail2OperationCompleted);
            }
            this.InvokeAsync("SendMail2", new object[] {
                        To,
                        Cc,
                        Bcc,
                        From,
                        Subject,
                        Body,
                        Format,
                        fc,
                        ErrorMsg}, this.SendMail2OperationCompleted, userState);
        }
        
        private void OnSendMail2OperationCompleted(object arg) {
            if ((this.SendMail2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMail2Completed(this, new SendMail2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendMail3", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SendMail3(string To, string Cc, string Bcc, string From, string Subject, string Body, string Format, FileClass[] fc, ref string ErrorMsg) {
            object[] results = this.Invoke("SendMail3", new object[] {
                        To,
                        Cc,
                        Bcc,
                        From,
                        Subject,
                        Body,
                        Format,
                        fc,
                        ErrorMsg});
            ErrorMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendMail3Async(string To, string Cc, string Bcc, string From, string Subject, string Body, string Format, FileClass[] fc, string ErrorMsg) {
            this.SendMail3Async(To, Cc, Bcc, From, Subject, Body, Format, fc, ErrorMsg, null);
        }
        
        /// <remarks/>
        public void SendMail3Async(string To, string Cc, string Bcc, string From, string Subject, string Body, string Format, FileClass[] fc, string ErrorMsg, object userState) {
            if ((this.SendMail3OperationCompleted == null)) {
                this.SendMail3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMail3OperationCompleted);
            }
            this.InvokeAsync("SendMail3", new object[] {
                        To,
                        Cc,
                        Bcc,
                        From,
                        Subject,
                        Body,
                        Format,
                        fc,
                        ErrorMsg}, this.SendMail3OperationCompleted, userState);
        }
        
        private void OnSendMail3OperationCompleted(object arg) {
            if ((this.SendMail3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMail3Completed(this, new SendMail3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FileClass {
        
        private byte[] wS_FileByteField;
        
        private FileAttributes wS_FileAttributesField;
        
        private System.DateTime wS_CreationTimeField;
        
        private System.DateTime wS_LastAccessTimeField;
        
        private System.DateTime wS_LastWriteTimeField;
        
        private string wS_FullNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] WS_FileByte {
            get {
                return this.wS_FileByteField;
            }
            set {
                this.wS_FileByteField = value;
            }
        }
        
        /// <remarks/>
        public FileAttributes WS_FileAttributes {
            get {
                return this.wS_FileAttributesField;
            }
            set {
                this.wS_FileAttributesField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime WS_CreationTime {
            get {
                return this.wS_CreationTimeField;
            }
            set {
                this.wS_CreationTimeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime WS_LastAccessTime {
            get {
                return this.wS_LastAccessTimeField;
            }
            set {
                this.wS_LastAccessTimeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime WS_LastWriteTime {
            get {
                return this.wS_LastWriteTimeField;
            }
            set {
                this.wS_LastWriteTimeField = value;
            }
        }
        
        /// <remarks/>
        public string WS_FullName {
            get {
                return this.wS_FullNameField;
            }
            set {
                this.wS_FullNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.FlagsAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum FileAttributes {
        
        /// <remarks/>
        ReadOnly = 1,
        
        /// <remarks/>
        Hidden = 2,
        
        /// <remarks/>
        System = 4,
        
        /// <remarks/>
        Directory = 8,
        
        /// <remarks/>
        Archive = 16,
        
        /// <remarks/>
        Device = 32,
        
        /// <remarks/>
        Normal = 64,
        
        /// <remarks/>
        Temporary = 128,
        
        /// <remarks/>
        SparseFile = 256,
        
        /// <remarks/>
        ReparsePoint = 512,
        
        /// <remarks/>
        Compressed = 1024,
        
        /// <remarks/>
        Offline = 2048,
        
        /// <remarks/>
        NotContentIndexed = 4096,
        
        /// <remarks/>
        Encrypted = 8192,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void IsConnectedCompletedEventHandler(object sender, IsConnectedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsConnectedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsConnectedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SendMailCompletedEventHandler(object sender, SendMailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendMailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendMailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SendMail2CompletedEventHandler(object sender, SendMail2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendMail2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendMail2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ErrorMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SendMail3CompletedEventHandler(object sender, SendMail3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendMail3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendMail3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ErrorMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591